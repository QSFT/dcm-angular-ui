"use strict";angular.module("dcm-ui.multiple-input",[]),angular.module("dcm-ui.multiple-input").directive("multipleInput",[function(){return{restrict:"E",template:'<div class="list-group" ng-show="!!items"><div class="list-group-item" ng-repeat="item in items">{{item}}<button class="btn btn-xs btn-danger pull-right" ng-click="removeEntry($index)"><i class="fa fa-times"></i></button></div></div><div class="input-group" ng-form="testForm" ng-class="{\'has-error\': testForm.newItem.$invalid}"><input ng-keypress="catchEnter($event)" class="form-control" name="newItem" type="{{type}}" placeholder="{{placeholder}}" ng-minlength="{{ngMinlength}}" ng-maxlength="{{ngMaxlength}}" ng-pattern="ngPattern" ng-model="ngModel"><span class="input-group-btn"><button class="btn btn-primary" type="button"ng-disabled="!ngModel" ng-click="addEntry()"><i ng-if="addButtonIcon" class="{{addButtonIcon}}"></i> {{addButtonLabel}}</button></span></div>',replace:!1,scope:{items:"=",type:"@",placeholder:"@",ngPattern:"=?",ngModel:"=?",ngMinlength:"@",ngMaxlength:"@",addButtonLabel:"@",addButtonIcon:"@"},compile:function(t,n){var e=t.find("input.form-control");return n.type||n.$set("type","text"),void 0===n.addButtonLabel&&n.$set("addButtonLabel","Add Item"),angular.forEach(["ngPattern","ngMinlength","ngMaxlength","placeholder"],function(t){void 0===n[t]&&e.removeAttr(t.replace(/([A-Z])/g,"-$1").toLowerCase())}),function(t){t.data={},angular.isArray(t.items)||(t.items=[]),t.addEntry=function(){t.ngModel&&-1===t.items.indexOf(t.ngModel)&&(t.items.push(t.ngModel),t.ngModel="")},t.removeEntry=function(n){t.items.splice(n,1)},t.catchEnter=function(n){13===n.which&&(t.addEntry(),n.preventDefault())}}}}}]);
//# sourceMappingURL=dcm-ui-multiple-input.min.js.map