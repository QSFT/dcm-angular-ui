"use strict";angular.module("dcm-ui.read-file",[]),angular.module("dcm-ui.read-file").directive("dcmDropZone",["$timeout",function(e){return{restrict:"A",scope:{dcmDropZone:"="},link:function(t,n){var o,a=!1;n.on("dragstart dragenter dragover",function(t){_.findWhere(t.originalEvent.dataTransfer.types,"Files")&&(t.stopPropagation(),t.preventDefault(),e.cancel(o),a||(a=!0,n.addClass("drop-zone-hover")),t.originalEvent.dataTransfer.effectAllowed="copyMove",t.originalEvent.dataTransfer.dropEffect="move")}).on("drop dragleave dragend",function(){e.cancel(o),o=e(function(){a=!1,n.removeClass("drop-zone-hover")},70)}),n.on("drop",function(e){e.stopPropagation(),e.preventDefault(),t.dcmDropZone(e.originalEvent)})}}}]),angular.module("dcm-ui.read-file").directive("dcmReadFile",["$window","$q","$log",function(e,t,n){return{require:"?ngModel",restrict:"A",scope:{into:"=?dcmReadFile",format:"@",display:"@",openFileSelect:"=?",dropHandler:"=?"},compile:function(n,o){if(!n.is("input")||!o.type||"file"!==o.type.toLowerCase())throw{message:"attempted to use dcm-read-file on an element which is not a file input: "+n.get(0).tagName};return function(n,o,a,i){if(n.format=n.format||"",!e.FileReader)return o.after('<input class="form-control" disabled value="File reading is not supported in this browser.">'),void o.detach();var r=function(e){var t=e.match(/\.([^.]+)$/);return t?t[1]:""},l=function(e){if("auto"!==n.format)return"text"===n.format?"text":"file"===n.format?"file":"uri";switch(r(e.name)){case"txt":case"text":case"yaml":return"text";default:return"uri"}},u=function(n){var o=t.defer(),u=new e.FileReader,c=function(){u.onloadend=null,u.onerror=null,u.onabort=null,u=null};return u.onerror=c,u.onabort=c,u.onloadend=function(){var e;if("file"===l(n)){var t=u.result.indexOf(",");e=-1===t?"":u.result.substring(t+1)}else e=u.result;if(i&&a.filesize&&n.size>parseInt(a.filesize,10))i.$setValidity("filesize",!1),i.$setDirty(),o.reject();else{var s={data:e,size:n.size,name:n.name,lastModified:n.lastModified,extension:r(n.name),type:l(n)},d=s.name.match(/\.([^.]+)$/);d&&(s.extension=d[1]),o.resolve(s)}c()},"text"===l(n)?u.readAsText(n):u.readAsDataURL(n),o.promise},c=function(e){i&&a.filesize&&i.$setValidity("filesize",!0);for(var o=[],r=0;r<e.length;r++)o.push(u(e[r]));t.all(o).then(function(e){a.dcmReadFile&&(a.multiple?n.into=e:n.into=e[0]),i&&i.$setViewValue(a.multiple?_.pluck(e,"data"):e[0].data)},function(){a.dcmReadFile&&(a.multiple?n.into=[]:n.into=void 0),i&&i.$setViewValue(a.multiple?[]:"")})};o.change(function(e){c(e.target.files)}),n.openFileSelect=function(){o.click()},n.dropHandler=function(e){c(e.dataTransfer.files)}}}}}]);
//# sourceMappingURL=dcm-ui-read-file.min.js.map